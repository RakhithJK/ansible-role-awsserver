- name: Find OS image (AMI)
  ec2_ami_find:
    name: "ubuntu/images/ebs/ubuntu-trusty-14.04-amd64-server-*"
    architecture: x86_64
    region: "{{ region }}"
    sort: name
    sort_order: descending
    sort_end: 1
  register: _ami

- name: Create SSH keys (EC2 key pair)
  ec2_key:
    name: "{{ host }}"
    region: "{{ region }}"
  register: _ec2_key

- name: Save EC2 key pair (if created)
  local_action: copy content="{{ _ec2_key.key.private_key }}" dest="~/.ssh/{{ _ec2_key.key.name }}" mode=0600
  when: _ec2_key.changed

- name: Provision VM (EC2 instance)
  ec2:
    keypair: "{{ host }}"
    region: "{{ region }}"
    instance_type: "{{ instance_type }}"
    image: "{{ _ami.results[0].ami_id }}"
    wait: True
    exact_count: 1
    count_tag:
      name: "{{ host }}"
    instance_tags:
      name: "{{ host }}"
  register: _ec2

- name: Add all instance public IPs to host group
  add_host: hostname={{ item.public_ip }} groups=tag_name_{{ host }} private_key_file=~/.ssh/{{ host }}.pem
  with_items: _ec2.instances

- name: Wait for the instances to boot by checking the ssh port
  wait_for: host={{ item.public_ip }} port=22 delay=60 timeout=320 state=started
  with_items: _ec2.instances

- name: Create DNS (route 53) zone
  route53_zone:
      state: present
      zone: "{{ domain }}"
  register: _route53

- name: Add private IP to route 53
  route53:
      command: create
      zone: "{{ _route53.set.name }}"
      record: "{{ host }}.{{ _route53.set.name }}"
      private_zone: "{{ _route53.set.private_zone }}"
      hosted_zone_id: "{{ _route53.set.zone_id }}"
      overwrite: True
      type: A
      value: "{{ item.public_ip }}"
      ttl: 60
  with_items: _ec2.instances
